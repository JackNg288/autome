name: MEXC Bot Workflow

on: 
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"   # every 6 hours

jobs:
  run-analyzer:
    name: Run Signal Analyzer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build & Install TA-Lib from source
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget tar automake autoconf libtool pkg-config
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/usr
          make
          sudo make install
          cd ..
          sudo ldconfig

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir ta-lib
          pip install -r requirements.txt

      - name: Run Signal Analyzer (1 hour)
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          LD_LIBRARY_PATH: /usr/local/lib
        run: |
          timeout 3600 python signal_analyzer.py

      - name: Upload Analyzer DB
        uses: actions/upload-artifact@v4
        with:
          name: analyzer-db
          path: signals_database.db

  run-bot:
    name: Run MEXC Bot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build & Install TA-Lib from source
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget tar automake autoconf libtool pkg-config
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/usr
          make
          sudo make install
          cd ..
          sudo ldconfig

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir ta-lib
          pip install -r requirements.txt

      - name: Run MEXC Bot (1 hour)
        env:
          LD_LIBRARY_PATH: /usr/local/lib
        run: |
          timeout 3600 python mexc_bot.py

      - name: Upload Signals JSON
        uses: actions/upload-artifact@v4
        with:
          name: signals-json
          path: active_signals.json

  generate-report:
    name: Generate Performance Report
    runs-on: ubuntu-latest
    needs: [run-analyzer, run-bot]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build & Install TA-Lib from source
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget tar automake autoconf libtool pkg-config
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/usr
          make
          sudo make install
          cd ..
          sudo ldconfig

      - name: Download Analyzer DB
        uses: actions/download-artifact@v4
        with:
          name: analyzer-db

      - name: Download Signals JSON
        uses: actions/download-artifact@v4
        with:
          name: signals-json

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir ta-lib
          pip install -r requirements.txt

      - name: Generate Report and Send to Telegram
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          LD_LIBRARY_PATH: /usr/local/lib
        run: |
          python -c "from signal_analyzer import SignalAnalyzer; analyzer = SignalAnalyzer(); report = analyzer.generate_performance_report(7); analyzer.send_telegram_alert(report); print('âœ… Performance report sent')"
