name: MEXC Bot with Signal Analyzer

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '30 * * * *'  # Run every 30 mins

jobs:
  run-analyzer:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install requests pandas numpy python-dotenv scikit-learn
        echo "âœ… Dependencies installed"
    
    - name: Initialize database
      run: |
        python -c "
        from signal_analyzer import SignalAnalyzer
        analyzer = SignalAnalyzer()
        print('âœ… Database initialized')
        "
        
    - name: Run Signal Analyzer
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "ðŸš€ Starting Signal Analyzer..."
        timeout 25m python signal_analyzer.py &
        ANALYZER_PID=$!
        echo "Analyzer PID: $ANALYZER_PID"
        
        # Keep analyzer running
        wait $ANALYZER_PID || true
        
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: run-analyzer
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install requests pandas numpy python-dotenv
        echo "âœ… Dependencies installed"
        
    - name: Run MEXC Bot
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "ðŸš€ Starting MEXC Bot..."
        python mexc_bot.py

  generate-report:
    runs-on: ubuntu-latest
    needs: [run-analyzer, run-bot]
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install requests pandas numpy python-dotenv
        
    - name: Generate Performance Report
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        python -c "
        from signal_analyzer import SignalAnalyzer
        analyzer = SignalAnalyzer()
        report = analyzer.generate_performance_report(7)
        analyzer.send_telegram_alert(report)
        print('âœ… Performance report sent')
        "
        
    - name: Upload signal database
      uses: actions/upload-artifact@v3
      with:
        name: signal-database
        path: |
          signals_database.db
          active_signals.json
          manual_signals.json
        retention-days: 30
